---
- name: Nos aseguramos que firewalld esté activado
  service: name=firewalld state=started enabled=yes

- name: set modprobe
  shell: modprobe br_netfilter

- name: Vamos a activar transparent masquerading para que los PODs puedan comunicarse dentro del cluster mediante VXLAN
  firewalld: masquerade=yes permanent=true state=enabled

- name: Reiniciar firewall
  command: firewall-cmd --reload

- name: Para permitir que kubernetes maneje correctamente el tráfico con el cortafuegos
  shell: |
    cat <<EOF > /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables  = 1
    net.ipv4.ip_forward                 = 1
    EOF
- name: Aplicando cambios de sysctl
  command: sysctl --system

- name: Swap
  shell: |
    swapoff -a
    sed -i '/swap/d' /etc/fstab

- name: Instalamos CRI-O que será el engine para ejecutar contenedores.
  get_url:
    url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8_Stream/devel:kubic:libcontainers:stable.repo
    dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo

- name: Instalamos CRI-O Configuramos los repositorios.
  get_url:
    url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1/CentOS_8_Stream/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1.repo
    dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1.repo

- name: Configuramos los modulos del kernel necesarios para CRI-O
  shell: |
    cat <<EOF > /etc/modules-load.d/crio.conf
    overlay
    br_netfilter
    EOF

- name: Instalamos CRI-O. Activamos y arrancamos el servicio
  dnf:
    name: "cri-o"
    state: latest

- name: install containerd
  shell: |
    sudo systemctl enable crio
    sudo systemctl start crio

- name: Configuramos el repositorio de kubernetes
  blockinfile:
    create: yes
    path: "/etc/yum.repos.d/kubernetes.repo"
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude=kubelet kubeadm kubectl

- name: Instalar kubeadm, kubectl y kubelet
  command:
    cmd: dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
    warn: no
- name: Iniciando y habilitando servicio kubelet permanentemente
  service:
    name: "kubelet"
    state: started
    enabled: yes
